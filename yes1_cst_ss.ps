%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.9
%%CreationDate: Sat Sep 22 21:23:56 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGGCGACCCUGAUGAGCUUGGUUUAGCUCGUCACUGUCCAGGUUCAAUCAGGCGAAACGGUGAAAGCCGUAGGUUGCCC\
) def
/coor [
[92.50000000 242.76091003]
[92.50000000 227.76091003]
[92.50000000 212.76091003]
[92.50000000 197.76091003]
[92.50000000 182.76091003]
[92.50000000 167.76091003]
[92.50000000 152.76091003]
[92.50000000 137.76091003]
[82.02603149 134.04515076]
[73.04988861 127.49231720]
[66.31958008 118.64846802]
[62.39595795 108.25058746]
[61.60599136 97.16515350]
[64.01551056 86.31596375]
[69.42372894 76.60710144]
[77.37995148 68.84764099]
[71.10005951 55.22549057]
[64.82015991 41.60334396]
[58.54026794 27.98119545]
[52.26037216 14.35904694]
[45.98047256 0.73689979]
[39.70057678 -12.88524818]
[24.89908600 -10.02530766]
[9.84330463 -10.79140282]
[-4.59144068 -15.13899422]
[-17.56593323 -22.81531906]
[-28.32585526 -33.37408447]
[-36.24563599 -46.20141983]
[-40.86483383 -60.55155563]
[-41.91488647 -75.59020233]
[-39.33475494 -90.44302368]
[-33.27444077 -104.24650574]
[-24.08628082 -116.19812012]
[-12.30446434 -125.60302734]
[1.38602924 -131.91442871]
[16.18925285 -134.76539612]
[31.24456596 -133.99017334]
[45.67667389 -129.63383484]
[58.64651108 -121.94963837]
[69.40003204 -111.38435364]
[77.31203461 -98.55222321]
[81.92252350 -84.19928741]
[82.96346283 -69.16000366]
[80.37432861 -54.30875015]
[74.30564880 -40.50894928]
[65.11024475 -28.56290436]
[53.32272720 -19.16514397]
[59.60262299 -5.54299641]
[65.88251495 8.07915115]
[72.16241455 21.70129967]
[78.44230652 35.32344818]
[84.72220612 48.94559479]
[91.00210571 62.56774139]
[108.98200226 62.56392288]
[125.00279236 70.72549438]
[135.57008362 85.27228546]
[138.37898254 103.03142548]
[152.81581116 107.10302734]
[167.25263977 111.17463684]
[181.68946838 115.24624634]
[196.12629700 119.31784821]
[211.87901306 114.75891113]
[223.51445007 126.31523895]
[219.06304932 142.09869385]
[203.10404968 145.87258911]
[192.05468750 133.75468445]
[177.61785889 129.68307495]
[163.18103027 125.61146545]
[148.74420166 121.53985596]
[134.30737305 117.46825409]
[123.23600769 130.69566345]
[107.50000000 137.76091003]
[107.50000000 152.76091003]
[107.50000000 167.76091003]
[107.50000000 182.76091003]
[107.50000000 197.76091003]
[107.50000000 212.76091003]
[107.50000000 227.76091003]
[107.50000000 242.76091003]
] def
/pairs [
[1 79]
[2 78]
[3 77]
[4 76]
[5 75]
[6 74]
[7 73]
[8 72]
[16 53]
[17 52]
[18 51]
[19 50]
[20 49]
[21 48]
[22 47]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
