%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.9
%%CreationDate: Fri Sep 21 23:24:48 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGGCGACCCUGAUGAGCUUGGUUUAGCUCGUCACUGUCCAGGUUCAAUCAGGCGAAACGGUGAAAGCCGUAGGUUGCCC\
) def
/coor [
[72.20323944 224.63174438]
[72.20323944 209.63174438]
[72.20323944 194.63174438]
[72.20323944 179.63174438]
[72.20323944 164.63174438]
[72.20323944 149.63174438]
[72.20323944 134.63174438]
[72.20323944 119.63173676]
[66.46298981 105.77354431]
[55.85638428 95.16693878]
[45.24978256 84.56034088]
[34.64318085 73.95373535]
[24.03658104 63.34713745]
[13.22377682 52.95082855]
[2.20893884 42.76881409]
[-8.80589867 32.58680344]
[-19.82073593 22.40479279]
[-30.83557510 12.22278214]
[-41.85041046 2.04077077]
[-52.86524963 -8.14124012]
[-63.88008881 -18.32325172]
[-76.94796753 -18.63789368]
[-85.93103027 -27.56893730]
[-86.29637909 -39.82631683]
[-96.90298462 -50.43291855]
[-107.50958252 -61.03952026]
[-123.07084656 -59.49646378]
[-135.95410156 -68.35964203]
[-140.07624817 -83.44412994]
[-133.49096680 -97.62750244]
[-119.30759430 -104.21279144]
[-104.22310638 -100.09063721]
[-95.35992432 -87.20738983]
[-96.90298462 -71.64612579]
[-86.29637909 -61.03952026]
[-75.68978119 -50.43291855]
[-58.60594940 -46.95666122]
[-53.69807434 -29.33808899]
[-42.68323898 -19.15607834]
[-31.66839981 -8.97406673]
[-20.65356255 1.20794439]
[-9.63872528 11.38995552]
[1.37611234 21.57196617]
[12.39095020 31.75397873]
[23.40578842 41.93598938]
[30.64632797 44.22352219]
[34.64318085 52.74053574]
[45.24978256 63.34713745]
[55.85638428 73.95373535]
[66.46298981 84.56034088]
[77.06958771 95.16693878]
[82.25418091 85.76281738]
[90.87555695 79.90675354]
[100.90087891 78.63417816]
[110.11586761 81.93820190]
[116.61354828 88.83165741]
[119.18825531 97.61907959]
[133.62509155 101.69068146]
[148.06192017 105.76229095]
[162.49873352 109.83390045]
[176.93556213 113.90550232]
[192.68829346 109.34656525]
[204.32371521 120.90289307]
[199.87231445 136.68634033]
[183.91331482 140.46023560]
[172.86396790 128.34233093]
[158.42713928 124.27072906]
[143.99031067 120.19911957]
[129.55348206 116.12751007]
[115.11664581 112.05590820]
[103.40591431 121.11183929]
[87.20323944 119.63173676]
[87.20323944 134.63174438]
[87.20323944 149.63174438]
[87.20323944 164.63174438]
[87.20323944 179.63174438]
[87.20323944 194.63174438]
[87.20323944 209.63174438]
[87.20323944 224.63174438]
] def
/pairs [
[1 79]
[2 78]
[3 77]
[4 76]
[5 75]
[6 74]
[7 73]
[8 72]
[9 51]
[10 50]
[11 49]
[12 48]
[13 47]
[14 45]
[15 44]
[16 43]
[17 42]
[18 41]
[19 40]
[20 39]
[21 38]
[24 36]
[25 35]
[26 34]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
