%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.9
%%CreationDate: Sat Sep 22 23:16:35 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGCAGGUACAUACAGCUGAUGAGUCCCAAAUAGGACGAAACGCGACACACACCACUAAACCGUGCAGUGUUUUUGCGUCCUGUAUUCCACUGC\
) def
/coor [
[76.30278778 374.62258911]
[79.13590240 355.44909668]
[79.63712311 340.45745850]
[80.13835144 325.46585083]
[80.63957214 310.47421265]
[67.92439270 302.71600342]
[60.75201797 289.54736328]
[61.13664246 274.45703125]
[69.07506561 261.50024414]
[82.52072144 254.20904541]
[83.02194977 239.21742249]
[83.52317047 224.22579956]
[84.02439880 209.23417664]
[84.52561951 194.24255371]
[85.02684784 179.25093079]
[82.33222961 175.08399963]
[82.37108612 169.14303589]
[86.09569550 163.28422546]
[87.59712982 148.35955811]
[89.09856415 133.43489075]
[90.59999847 118.51021576]
[76.96489716 106.43045044]
[77.01271057 85.70157623]
[63.20295715 79.84574127]
[49.39321136 73.98989868]
[35.58346176 68.13406372]
[21.02799797 74.29149628]
[6.41336346 68.27584839]
[0.41016197 53.65609741]
[6.57998705 39.10588074]
[21.26239014 33.25758362]
[35.74656296 39.58089828]
[41.43930054 54.32431412]
[55.24905014 60.18015289]
[69.05879974 66.03598785]
[82.86854553 71.89183044]
[97.11882019 67.20892334]
[104.76306915 54.30289841]
[112.40732574 41.39687347]
[120.05157471 28.49085236]
[127.69582367 15.58482742]
[135.34007263 2.67880416]
[142.98431396 -10.22721958]
[132.32054138 -20.89186287]
[124.64468384 -33.87384796]
[120.43925476 -48.35712051]
[119.96861267 -63.43124771]
[123.26234436 -78.14865875]
[130.11340332 -91.58420563]
[140.09112549 -102.89331055]
[152.56829834 -111.36508179]
[166.76060486 -116.46697235]
[181.77589417 -117.87828064]
[196.67030334 -115.51028442]
[210.50755310 -109.51183319]
[222.41781616 -100.26000214]
[231.65242004 -88.33637238]
[237.63084412 -74.49046326]
[239.97731018 -59.59264755]
[238.54428101 -44.57941055]
[233.42187500 -30.39449692]
[224.93206787 -17.92958641]
[213.60855103 -7.96823025]
[200.16310120 -1.13660848]
[185.44094849 2.13583732]
[170.36752319 1.64339840]
[155.89035034 -2.58296990]
[148.24609375 10.32305336]
[140.60185242 23.22907829]
[132.95759583 36.13510132]
[125.31334686 49.04112625]
[117.66909790 61.94714737]
[110.02484894 74.85317230]
[123.36286163 91.19307709]
[120.37990570 110.36438751]
[105.52466583 120.01165009]
[104.02323151 134.93632507]
[102.52179718 149.86099243]
[101.02036285 164.78565979]
[100.01847076 179.75215149]
[99.51724243 194.74377441]
[99.01602173 209.73539734]
[98.51479340 224.72703552]
[98.01357269 239.71865845]
[97.51234436 254.71028137]
[110.44097900 262.88327026]
[117.49626160 276.34133911]
[116.87210083 291.42367554]
[108.83617401 304.08383179]
[95.63119507 310.97543335]
[95.12997437 325.96707153]
[94.62874603 340.95867920]
[94.12752533 355.95031738]
] def
/pairs [
[2 93]
[3 92]
[4 91]
[5 90]
[10 85]
[11 84]
[12 83]
[13 82]
[14 81]
[15 80]
[18 79]
[19 78]
[20 77]
[21 76]
[23 36]
[24 35]
[25 34]
[26 33]
[37 73]
[38 72]
[39 71]
[40 70]
[41 69]
[42 68]
[43 67]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
